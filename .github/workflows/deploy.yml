name: Deploy
env:
  NAME: liber-explorer
  AWS_DEFAULT_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BASE_DOMAIN: rdok.co.uk
on:
  push:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        default: production
jobs:
  package-deploy:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Prepare environment variables
        id: env
        run: |
          ENVIRONMENT=testing
          SUBDOMAIN=testing-
          [ "$INPUTS_ENVIRONMENT" = "production" ] && ENVIRONMENT=production
          [ "$INPUTS_ENVIRONMENT" = "production" ] && SUBDOMAIN=""
          STACK_NAME="rdok-${ENVIRONMENT}-${NAME}"
          DOMAIN="${SUBDOMAIN}${NAME}.${BASE_DOMAIN}"
          echo ::set-output name=stack-name::"${STACK_NAME}"
          echo ::set-output name=domain::"${DOMAIN}"
          echo ::set-output name=deploy-bucket::"rdok-${ENVIRONMENT}-deployments-us-east-1"
      - name: CloudFormation Package & Deploy
        run: |
          sam package \
            --output-template-file packaged-template.yml \
            --s3-prefix "${{ steps.env.outputs.stack-name }}/packages" \
            --s3-bucket "${{ steps.env.outputs.deploy-bucket }}"
          sam deploy \
            --no-fail-on-empty-changeset \
            --s3-bucket "${{ steps.env.outputs.deploy-bucket }}" \
            --s3-prefix "${{ steps.env.outputs.stack-name }}/deployments" \
            --template-file packaged-template.yml \
            --stack-name ${{ steps.env.outputs.stack-name }} \
            --capabilities CAPABILITY_IAM \
            --parameter-overrides \
              Route53HostedZoneId=ZSY7GT2NEDPN0 \
              DomainName=${{ steps.env.outputs.domain }} \
              WildcardCertificateARN=${{ secrets.WILDCARD_CERTIFICATE_ARN }}
      - name: Website Bucket Sync
        run: |
          docker run --rm -u "$(id -u)" -w "/app" -v "${PWD}:/app" \
            node:15.3-alpine3.12 sh -c 'yarn && yarn compile'

          BUCKET_NAME=$( \
            aws cloudformation describe-stacks  \
            --stack-name ${{ steps.env.outputs.stack-name }} \
              --query 'Stacks[0].Outputs[?OutputKey==`WebsiteBucket`].OutputValue' \
              --output text \
          )

          aws s3 sync ./public s3://${BUCKET_NAME} --delete
      - name: Cache Invalidation
        run: |
          DISTRIBUTION_ID=$( \
            aws cloudformation describe-stacks  \
            --stack-name ${{ steps.env.outputs.stack-name }} \
            --query 'Stacks[0].Outputs[?OutputKey==`DistributionID`].OutputValue' \
            --output text \
          )

          aws cloudfront create-invalidation \
            --distribution-id "$DISTRIBUTION_ID" \
            --paths "/*"
