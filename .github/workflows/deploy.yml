name: Deploy
env:
  AWS_DEFAULT_REGION: us-east-1
  AWS_ACCESS_KEY_ID: AKIAVEPBBWCCUDJORPG3
  NAME: liber-explorer
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  INPUTS_ENVIRONMENT: testing
  BASE_DOMAIN: rdok.co.uk
on:
  # pull_request:
  push:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        default: production
jobs:
  package-deploy:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: CloudFormation Package & Deploy
        run: |
          sam package \
            --output-template-file packaged-template.yml \
            --s3-prefix "${STACK_NAME}/packages" \
            --s3-bucket "${DEPLOY_BUCKET}"
          sam deploy \
            --s3-bucket "$DEPLOY_BUCKET" \
            --s3-prefix "${STACK_NAME}/deployments" \
            --template-file packaged-template.yml \
            --stack-name "$STACK_NAME" \
            --capabilities CAPABILITY_IAM \
            --parameter-overrides \
              Route53HostedZoneId=ZSY7GT2NEDPN0 \
              DomainName=${DOMAIN}
        env:
          STACK_NAME: ${{ format('rdok-{0}-{1}', env.INPUTS_ENVIRONMENT, env.NAME) }}
          DEPLOY_BUCKET: ${{ format('rdok-{0}-deployments-us-east-1', env.INPUTS_ENVIRONMENT) }}
          DOMAIN: ${{ format('{0}-{1}.{2}', env.INPUTS_ENVIRONMENT, env.NAME, env.BASE_DOMAIN) }}
      - name: Website Bucket Sync
        run: |
          BUCKET_NAME=$( \
            aws cloudformation describe-stacks  \
              --stack-name "$STACK_NAME" \
              --query 'Stacks[0].Outputs[?OutputKey==`WebsiteBucket`].OutputValue' \
              --output text \
          )
          aws s3 sync ./public s3://${BUCKET_NAME} --delete
        env:
          STACK_NAME: ${{ format('rdok-{0}-{1}', env.INPUTS_ENVIRONMENT, env.NAME) }}
      - name: Cache Invalidation
        run: |
          DISTRIBUTION_ID=$( \
            aws cloudformation describe-stacks  \
            --stack-name "$STACK_NAME" \
            --query 'Stacks[0].Outputs[?OutputKey==`DistributionID`].OutputValue' \
            --output text \
          )
          aws cloudfront create-invalidation \
            --distribution-id "$DISTRIBUTION_ID" \
            --paths "/*"
        env:
          STACK_NAME: ${{ format('rdok-{0}-{1}', env.INPUTS_ENVIRONMENT, env.NAME) }}
